---
name: Test Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  build_only_version_file_in_container:
    name: "Build only, version: file_in_container"
    uses: ./.github/workflows/build_and_push_image.yml
    with:
      push_enabled: false
      ghcr_repo_owner: mikenye
      ghcr_repo: ${{ github.repository }}
      platform_linux_arm32v6_enabled: true
      platform_linux_i386_enabled: true
      build_nohealthcheck: false
      get_version_method: file_in_container:file=/IMAGE_VERSION
    secrets:
      ghcr_token: ${{ secrets.GITHUB_TOKEN }}

  build_only_version_cargo_toml_file_in_image:
    name: "Build only, version: cargo_toml_file_in_image"
    uses: ./.github/workflows/build_and_push_image.yml
    with:
      push_enabled: false
      ghcr_repo_owner: mikenye
      ghcr_repo: ${{ github.repository }}
      platform_linux_arm32v6_enabled: true
      platform_linux_i386_enabled: true
      build_nohealthcheck: false
      get_version_method: cargo_toml_file_in_image:file=/Cargo.toml
    secrets:
      ghcr_token: ${{ secrets.GITHUB_TOKEN }}

  build_only_version_cargo_toml_file_in_repo:
    name: "Build only, version: cargo_toml_file_in_repo"
    uses: ./.github/workflows/build_and_push_image.yml
    with:
      push_enabled: false
      ghcr_repo_owner: mikenye
      ghcr_repo: ${{ github.repository }}
      platform_linux_arm32v6_enabled: true
      platform_linux_i386_enabled: true
      build_nohealthcheck: false
      get_version_method: cargo_toml_file_in_repo:file=/test_image_rootfs/Cargo.toml
    secrets:
      ghcr_token: ${{ secrets.GITHUB_TOKEN }}

  build_only_version_git_commit_hash_short:
    name: "Build only, version: git_commit_hash_short"
    uses: ./.github/workflows/build_and_push_image.yml
    with:
      push_enabled: false
      ghcr_repo_owner: mikenye
      ghcr_repo: ${{ github.repository }}
      platform_linux_arm32v6_enabled: true
      platform_linux_i386_enabled: true
      build_nohealthcheck: false
      get_version_method: git_commit_hash_short
    secrets:
      ghcr_token: ${{ secrets.GITHUB_TOKEN }}

  build_push_version_file_in_container:
    name: "Build & Push, version: file_in_container"
    uses: ./.github/workflows/build_and_push_image.yml
    with:
      push_enabled: true
      ghcr_repo_owner: mikenye
      ghcr_repo: ${{ github.repository }}
      platform_linux_arm32v6_enabled: true
      platform_linux_i386_enabled: true
      build_nohealthcheck: false
    secrets:
      ghcr_token: ${{ secrets.GITHUB_TOKEN }}

  build_push_version_cargo_toml_file_in_image:
    name: "Build & Push, version: cargo_toml_file_in_image"
    uses: ./.github/workflows/build_and_push_image.yml
    with:
      push_enabled: true
      ghcr_repo_owner: mikenye
      ghcr_repo: ${{ github.repository }}
      platform_linux_arm32v6_enabled: true
      platform_linux_i386_enabled: true
      build_nohealthcheck: false
      get_version_method: cargo_toml_file_in_image:file=/Cargo.toml
    secrets:
      ghcr_token: ${{ secrets.GITHUB_TOKEN }}

  build_push_version_cargo_toml_file_in_repo:
    name: "Build & Push, version: cargo_toml_file_in_repo"
    uses: ./.github/workflows/build_and_push_image.yml
    with:
      push_enabled: true
      ghcr_repo_owner: mikenye
      ghcr_repo: ${{ github.repository }}
      platform_linux_arm32v6_enabled: true
      platform_linux_i386_enabled: true
      build_nohealthcheck: false
      get_version_method: cargo_toml_file_in_repo:file=/test_image_rootfs/Cargo.toml
    secrets:
      ghcr_token: ${{ secrets.GITHUB_TOKEN }}

  build_push_version_git_commit_hash_short:
    name: "Build & Push, version: git_commit_hash_short"
    uses: ./.github/workflows/build_and_push_image.yml
    with:
      push_enabled: true
      ghcr_repo_owner: mikenye
      ghcr_repo: ${{ github.repository }}
      platform_linux_arm32v6_enabled: true
      platform_linux_i386_enabled: true
      build_nohealthcheck: false
      get_version_method: git_commit_hash_short
    secrets:
      ghcr_token: ${{ secrets.GITHUB_TOKEN }}

  build_only_nohealthcheck:
    name: "Build only, nohealthcheck"
    uses: ./.github/workflows/build_and_push_image.yml
    with:
      push_enabled: false
      ghcr_repo_owner: mikenye
      ghcr_repo: ${{ github.repository }}
      platform_linux_arm32v6_enabled: true
      platform_linux_i386_enabled: true
    secrets:
      ghcr_token: ${{ secrets.GITHUB_TOKEN }}

  build_push_nohealthcheck:
    uses: ./.github/workflows/build_and_push_image.yml
    name: "Build & Push, nohealthcheck"
    with:
      push_enabled: true
      ghcr_repo_owner: mikenye
      ghcr_repo: ${{ github.repository }}
      platform_linux_arm32v6_enabled: true
      platform_linux_i386_enabled: true
    secrets:
      ghcr_token: ${{ secrets.GITHUB_TOKEN }}

  populate_cache:
    name: "Populate cache"
    runs-on: ubuntu-latest
    steps:
      # Check out code
      - name: Checkout
        if: needs.workflows_env.outputs.build_nohealthcheck == 'true'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Populate cache
      - name: "Populate cache"
        id: populate_cache
        uses: actions/cache@v3
        with:
          path: test_image_rootfs
          key: ${{ github.run_id }}
  
  check_cache:
    name: "Check cache"
    needs: [populate_cache]
    uses: ./.github/workflows/build_and_push_image.yml
    with:
      push_enabled: false
      ghcr_repo_owner: mikenye
      ghcr_repo: ${{ github.repository }}
      cache_enabled: true
      cache_path: test_image_rootfs_cache
      cache_key: ${{ github.run_id }}
    secrets:
      ghcr_token: ${{ secrets.GITHUB_TOKEN }}

